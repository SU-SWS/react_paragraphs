<?php

namespace Drupal\Tests\react_paragraphs\Unit\Plugin\Field\FieldWidget;

use Drupal\Core\DependencyInjection\ContainerBuilder;
use Drupal\Core\Logger\LoggerChannelFactoryInterface;
use Drupal\Core\Logger\LoggerChannelInterface;
use Drupal\paragraphs\ParagraphsTypeInterface;
use Drupal\react_paragraphs\Plugin\Field\FieldWidget\ReactParagraphs;
use Drupal\Tests\UnitTestCase;

/**
 * Class ReactParagraphsWidgetTest
 *
 * @group react_paragraphs
 * @coversDefaultClass \Drupal\react_paragraphs\Plugin\Field\FieldWidget\ReactParagraphs
 */
class ReactParagraphsWidgetTest extends UnitTestCase {

  protected function setUp() {
    parent::setUp();
    $container = new ContainerBuilder();

    $logger_channel = $this->createMock(LoggerChannelInterface::class);

    $logger_factory = $this->createMock(LoggerChannelFactoryInterface::class);
    $logger_factory->method('get')->willReturn($logger_channel);

    $container->set('logger.factory', $logger_factory);
    \Drupal::setContainer($container);
  }

  /**
   * Test when the exception is thrown, we still get null.
   */
  public function testException() {
    $paragraph_type = $this->createMock(ParagraphsTypeInterface::class);
    $paragraph_type->method('getIconUrl')->willThrowException(new \Exception('This broke'));

    $this->assertNull(TestReactParagraphsWidget::getParagraphTypeIcon($paragraph_type));
  }

}

/**
 * {@inheritDoc}
 */
class TestReactParagraphsWidget extends ReactParagraphs {

  /**
   * {@inheritDoc}
   */
  public static function getParagraphTypeIcon(ParagraphsTypeInterface $type) {
    return parent::getParagraphTypeIcon($type); // TODO: Change the autogenerated stub
  }

}
